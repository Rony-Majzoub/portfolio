@import 'variables';
@import 'animations';
body {
  height: 100%;
  @include reset-mp;
  overflow-x: hidden;
  margin-bottom: 2rem;
  background-color: var(--bgColor);
  transition-duration: var(--cubic-duration);
  transition-timing-function: var(--cubicAnimation);
}

header {
  background-color: var(--headerColor);
  @include center;
  flex-direction: row;
  justify-content: space-between;
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 8vh;
  box-shadow: var(--soft-shadow);
  box-sizing: border-box;
  z-index: 1;
  transition-duration: var(--cubic-duration);
  transition-timing-function: var(--cubicAnimation);
}

@media screen and (min-width: 320px) {
  header {
    padding: 0 1rem 0 0.5rem;
  }
}

@media screen and (min-width: 1000px) {
  header {
    padding: 0 5rem 0 4.5rem;
  }
}

.header-item {
  @include center;
  @include high-text;
  text-decoration: none;
  padding: 0 0.5rem 0 0.5rem;
  height: 90%;
  transition-duration: 100ms;
  transition-timing-function: var(--cubicAnimation);
}

.header-item:hover {
  background-color: rgba(var(--header-hover), 0.12);
  transition-duration: 100ms;
  transition-timing-function: var(--cubicAnimation);
  border-radius: 2px;
}

@media screen and (min-width: 320px) {
  .header-item {
    font-size: 0.9rem;
  }
}

@media screen and (min-width: 700px) {
  .header-item {
    font-size: 1.2rem;
  }
}
@media screen and (min-width: 1000px) {
  .header-item {
    font-size: 1.4rem;
  }
}

nav {
  @include center;
  height: 8vh;
}

button {
  @include reset-mp;
  border: none;
  background: none;
  cursor: pointer;
  outline: transparent;
}

.post-text {
  position: fixed;
  color: var(--font-hover);
  opacity: 0;
  z-index: 10000;
  transition-duration: var(--cubic-duration);
  transition-timing-function: var(--cubicAnimation);
  font-style: normal;
  font-weight: 500;
  font-size: 32px;
  line-height: 115%;
  text-align: center;
  letter-spacing: 1.25px;
  text-transform: capitalize;
}

.post {
  grid-column: span 2;
  transition-duration: var(--cubic-duration);
  transition-timing-function: var(--cubicAnimation);
  
  img {
    max-width: 100%;
    transition-duration: var(--cubic-duration);
    transition-timing-function: var(--cubicAnimation);
  }
  h2 {
    @include high-text;
    @include reset-mp;
  }
  
  h3 {
    @include medium-text;
    @include reset-mp;
  }
  
  a {
    filter: var(--image-filter);
    transition-duration: var(--cubic-duration);
    transition-timing-function: var(--cubicAnimation);
    @include center;
  }
  
  a:hover {
    transition-duration: var(--cubic-duration);
    transition-timing-function: var(--cubicAnimation);
    @media screen and (min-width: 1000px) {
      .post-text {
        opacity: 1;
        transition-duration: var(--cubic-duration);
        transition-timing-function: var(--cubicAnimation);
        z-index: 10000;
        color: var(--font-hover);
      }
    }
    img {
      filter: var(--hover-filter);
      transition-duration: var(--cubic-duration);
      transition-timing-function: var(--cubicAnimation);
    }
  }
}


.material-icons {
  color: var(--icon-color)
}

@media screen and (min-width: 320px) {
  .material-icons {
    font-size: 32px;
  }
}

@media screen and (min-width: 700px) {
  .material-icons {
    font-size: 48px;
  }
}


main {
  padding: 0 5rem 0 5rem;
  margin-top: 12vh;
  max-width: 100vw;

  h1 {
    @include high-text;
    @include reset-mp;
    font-size: 2.5em;
  }
  h2 {
    @include high-text;
    font-family: var(--fontSubtitle);
    opacity: 0.80;
  }
  p {
    @include medium-text;
    @include reset-mp;
    font-size: 1.5em;
    line-height: 1.5em;
    opacity: 0.80;
  }
}

@media screen and (min-width: 320px) {
  main {
    padding: 0 1rem 0 1rem;
  }
}

@media screen and (min-width: 1000px) {
  main {
    padding: 0 5rem 0 5rem;
  }
}
.project-main {
  @include center;
}
.profile {
  border-radius: 50%;
  width: 50%;
  filter: var(--profile-shadow);
  height: auto;
}

.info-content {

  h3 {
    @include high-text;
    @include reset-mp;
    opacity: 0.80;
    padding-top: 1em;
    font-size: 2.2em;
    line-height: 3rem;
  }

  h4 {
    @include medium-text;
    @include reset-mp;
    opacity: 0.80;
    font-size: 1.5em;
    line-height: 2rem;
  }
}

@media screen and (min-width: 320px) {
  .info-content {
    text-align: center;
  }
}

@media screen and (min-width: 1000px) {
  .info-content {
    text-align: right;
  }
}

.info-text {
  a {
    font-weight: var(--font-heavy);
  }

  /* unvisited link */
  a:link {
  color: var(--unvisited-link);
  }

  /* visited link */
  a:visited {
  color: var(--visited-link);
  }

  /* mouse over link */
  a:hover {
  color: var(--hover-link);
  }

  /* selected link */
  a:active {
  color: var(--active-link);
  } 

  h2 {
    @include medium-text;
    @include reset-mp;
    font-weight: var(--font-medium);
    opacity: 0.80;
    line-height: 1.5em;
  }
  @media screen and (min-width: 320px) {
    h2 {
      font-size: 1.5em;
    }
  }
  
  @media screen and (min-width: 1000px) {
    h2 {
      font-size: 2em;
    }
  }
  h3 {
    @include medium-text;
    @include reset-mp;
    opacity: 0.80;
    line-height: 3rem;
    font-weight: var(--font-heavy);
  }
  @media screen and (min-width: 320px) {
    h3 {
      font-size: 1.2em;
    }
  }
  
  @media screen and (min-width: 1000px) {
    h3 {
      font-size: 2em;
    }
  }
}
@media screen and (min-width: 320px) {
  .info-text {
    max-width: 85vw;
  }
}



.project-grid {
  display: grid;
  gap: 3rem;
}
@media screen and (min-width: 320px) {
  .project-grid {
    grid-template-columns: repeat( 1, minmax(150px, 1fr));
  }
}

@media screen and (min-width: 700px) {
  .project-grid {
    grid-template-columns: repeat( auto-fit, minmax(180px, 1fr));
  }
}
@media screen and (min-width: 1025px) {
  .project-grid {
    grid-template-columns: repeat( auto-fit, minmax(251px, 1fr));
    .info-text {
      max-width: 50vw;
    }
  }
  
}

@media screen and (min-width: 320px) {
  .post:nth-last-child(1):nth-child(odd) {
    grid-column: auto / span 2;
  }
}

@media screen and (min-width: 1000px) {
  .post:nth-last-child(1):nth-child(odd) {
    grid-column: 2 / span 2;
  }
}

.project-flex {
  @include center;
  gap: 3rem;
}
@media screen and (min-width: 320px) {
  .project-flex {
    flex-direction: column-reverse;
    max-width: 100%;
  }
  img {
    max-width: 100%
  }
}

@media screen and (min-width: 1000px) {
  .project-flex {
    flex-direction: column-reverse;
    max-width: 75%;
  }
  .info-project {

    img {
      max-width: 100%
    }
  }
}